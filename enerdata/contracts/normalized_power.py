NORMALIZED_POWERS = {
    191: ('127', '1.5'),
    200: ('133', '1.5'),
    330: ('220', '1.5'),
    345: ('230', '1.5'),
    381: ('127', '3'),
    399: ('133', '3'),
    445: ('127', '3.5'),
    466: ('133', '3.5'),
    572: ('3x127/220', '1.5'),
    598: ('3x133/230', '1.5'),
    635: ('127', '5'),
    660: ('220', '3'),
    665: ('133', '5'),
    690: ('230', '3'),
    770: ('220', '3.5'),
    805: ('230', '3.5'),
    953: ('127', '7.5'),
    987: ('3x220/380', '1.5'),
    998: ('133', '7.5'),
    1039: ('3x230/400', '1.5'),
    1100: ('220', '5'),
    1143: ('3x127/220', '3'),
    1150: ('230', '5'),
    1195: ('3x133/230', '3'),
    1270: ('127', '10'),
    1330: ('133', '10'),
    1334: ('3x127/220', '3.5'),
    1394: ('3x133/230', '3.5'),
    1650: ('220', '7.5'),
    1725: ('230', '7.5'),
    1905: ('127', '15'),
    1975: ('3x220/380', '3'),
    1992: ('3x133/230', '5'),
    1995: ('133', '15'),
    2078: ('3x230/400', '3'),
    2200: ('220', '10'),
    2300: ('230', '10'),
    2304: ('3x220/380', '3.5'),
    2425: ('3x230/400', '3.5'),
    2540: ('127', '20'),
    2660: ('133', '20'),
    2858: ('3x127/220', '7.5'),
    2988: ('3x133/230', '7.5'),
    3175: ('127', '25'),
    3291: ('3x220/380', '5'),
    3300: ('220', '15'),
    3325: ('133', '25'),
    3450: ('230', '15'),
    3464: ('3x230/400', '5'),
    3810: ('127', '30'),
    3811: ('3x127/220', '10'),
    3984: ('3x133/230', '10'),
    3990: ('133', '30'),
    4400: ('220', '20'),
    4445: ('127', '35'),
    4600: ('230', '20'),
    4655: ('133', '35'),
    4936: ('3x220/380', '7.5'),
    5080: ('127', '40'),
    5196: ('3x230/400', '7.5'),
    5320: ('133', '40'),
    5500: ('220', '25'),
    5715: ('127', '45'),
    5716: ('3x127/220', '15'),
    5750: ('230', '25'),
    5976: ('3x133/230', '15'),
    5985: ('133', '45'),
    6350: ('127', '50'),
    6582: ('3x220/380', '10'),
    6600: ('220', '30'),
    6650: ('133', '50'),
    6900: ('230', '30'),
    6928: ('3x230/400', '10'),
    7621: ('3x127/220', '20'),
    7700: ('220', '35'),
    7967: ('3x133/230', '20'),
    8001: ('127', '63'),
    8050: ('230', '35'),
    8379: ('133', '63'),
    8800: ('220', '40'),
    9200: ('230', '40'),
    9526: ('3x127/220', '25'),
    9873: ('3x220/380', '15'),
    9900: ('220', '45'),
    9959: ('3x133/230', '25'),
    10350: ('230', '45'),
    10392: ('3x230/400', '15'),
    11000: ('220', '50'),
    11432: ('3x127/220', '30'),
    11500: ('230', '50'),
    11951: ('3x133/230', '30'),
    13164: ('3x220/380', '20'),
    13337: ('3x127/220', '35'),
    13856: ('3x230/400', '20'),
    13860: ('220', '63'),
    13943: ('3x133/230', '35'),
    14490: ('230', '63'),
    15242: ('3x127/220', '40'),
    15935: ('3x133/230', '40'),
    16454: ('3x220/380', '25'),
    17147: ('3x127/220', '45'),
    17321: ('3x230/400', '25'),
    17927: ('3x133/230', '45'),
    19053: ('3x127/220', '50'),
    19745: ('3x220/380', '30'),
    19919: ('3x133/230', '50'),
    20785: ('3x230/400', '30'),
    23036: ('3x220/380', '35'),
    24006: ('3x127/220', '63'),
    24249: ('3x230/400', '35'),
    25097: ('3x133/230', '63'),
    26327: ('3x220/380', '40'),
    27713: ('3x230/400', '40'),
    29618: ('3x220/380', '45'),
    31177: ('3x230/400', '45'),
    32909: ('3x220/380', '50'),
    34641: ('3x230/400', '50'),
    41465: ('3x220/380', '63'),
    43648: ('3x230/400', '63')
}


class NormalizedPower(object):

    def get_volt_int(self, pot):
        volt_int = NORMALIZED_POWERS.get(pot, None)
        if volt_int is None:
            raise ValueError('The given power is not normalized')
        return volt_int

    def is_normalized(self, pot):
        return pot in NORMALIZED_POWERS

    def get_norm_powers(self, pot_min, pot_max):
        for norm_pow in sorted(NORMALIZED_POWERS):
            if pot_min < norm_pow <= pot_max:
                yield norm_pow
            elif norm_pow > pot_max:
                break
